@page "/fileinput"
@using BlazorDemoUI.Services

@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject IBookData _db
@inject IFileUpload fileUpload


<h3>FileInput</h3>

<InputFile OnChange="HandelFileSelected"></InputFile>
<button type="reset" class="btn btn-primary" @onclick="UploadImageDb">Search</button>
<button type="reset" class="btn btn-primary" @onclick="testImage">Search</button>
<img id="imgTest" src="@sImageData" />

@*@if (file != null)
    {
        <p>Name:@file.Name </p>
        <p>Size in Bytes:@file.Size </p>
        <p>File type:@file.Type  </p>
    }*@

@code {
    public string sImageData = "data:image/jpeg;base64,";
    IFileListEntry file;

    async Task HandelFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
        if (file != null)
        {
            await fileUpload.UploadAsync(file);
        }
    }

    async Task UploadImageDb()
    {

        byte[] bImageByte = null;
        bImageByte = fileUpload.getImageBytes();

        Books b = new Books
        {
            SalesNumber = 2,
            UserID = 2,
            BookTitle = "TestImage",
            BookEdition = 2,
            BookPrice = 14.23,
            LocationID = 2,
            ModuleCode = "CMPg 213",
            BookInstitute = "NWu",
            DatePosted = DateTime.Today.Date,
            BookImage = bImageByte
        };
        await _db.InsertBook(b);
        fileUpload.deleteLocal();
    }

    async void loadImage()
    {
        byte[] dbImage = await _db.Get_ImageBytes(0);

        string sImageBase64 = Convert.ToBase64String(dbImage);

        sImageData = sImageData + sImageBase64;
    }
}
