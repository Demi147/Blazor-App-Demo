@page "/reports"

@using BlazorDemoUI.Services;
@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject ISiteReviewData _db
@inject IUserData _db2
@inject ILocationData _db3
@inject IBookData _db4
@inject IGenerate_SiteReport _report
@inject IGenerate_LocationsReport _report2
@inject Microsoft.JSInterop.IJSRuntime JS

<h3>Reports</h3>

<button class="btn btn-primary" @onclick="@CompilePDF_Site">Generate site report</button>
<button class="btn btn-primary" @onclick="@CompilePDF_Report">Generate lcoations report</button>

@functions{
    void CreatePDF()
    {
        if (iReportType == 0)
        {
            JS.SaveAs(DateTime.Today.Date.ToShortDateString() + "Site report.pdf", _report.Completed_PDF());
        }
        else if(iReportType == 1)
        {
            JS.SaveAs(DateTime.Today.Date.ToShortDateString() + "Locations report.pdf", _report2.Completed_PDF());
        }
    }
}

@code {
    private int iReportType = -1;
    public async Task CompilePDF_Report()
    {
        List<Books> _book = await _db4.Get_10TopInstitute_Sales();
        List<Locations> _locations = await _db3.Get_AllProvince();

        List<string> lProvince = new List<string>();
        List<int> lTotals = new List<int>();
        List<string> lInstitute = new List<string>();
        List<int> lTotalsInstitute = new List<int>();

        foreach (var book in _book)
        {
            lInstitute.Add(book.BookInstitute);
            lTotalsInstitute.Add(book.Total);
        }

        foreach (var location in _locations)
        {
            lProvince.Add(location.Province);
            lTotals.Add(await _db4.Get_TotalSales_Province(location.Province));
        }

        string[] arrProvince = lProvince.ToArray();
        int[] arrTotals = lTotals.ToArray();
        string[] arrInstitute = lInstitute.ToArray();
        int[] arrTotalsInstitute = lTotalsInstitute.ToArray();

        _report2.CompilePDF_Body(arrTotals, arrProvince, arrTotalsInstitute, arrInstitute);
        iReportType = 1;
        CreatePDF();
    }

    public async Task CompilePDF_Site()
    {
        List<SiteReview> _review;
        List<Users> _user;

        double dSiteAverage = await _db.Get_AVG_UserReview();
        _review = await _db.Get_10LatestReveiws();

        int[] arrUserID = _report.Get_UserID(_review, dSiteAverage);

        _user = await _db2.Get_ReviewerDetails(arrUserID);

        _report.Get_ReviewerDetails(_user);

        iReportType = 0;
        CreatePDF();

    }
}
