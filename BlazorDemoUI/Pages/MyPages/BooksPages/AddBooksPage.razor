@page "/BooksPages/Main/AddBooks"

@using DataAccessLibrary.Bussiness_Logic
@using DataAccessLibrary.Bussiness_Logic.BooksLogic
@using DataAccessLibrary.Models
@using DataAccessLibrary
@using Services


@inject IBookData _db
@inject NavigationManager navigationManager
@inject IBooksCreateService booksAdd
@inject IFileUpload fileUpload

    <h1>
        Enter Applicable Information
        <button type="submit" name="btnAddBookLoc" class="btn btn-outline-primary" style="float: right;" @onclick="AddNav">Submit Sale Request</button>
        <button type="submit" name="btnCancelSale" class="btn btn-outline-primary" style="float: right;" @onclick="BackNav">Cancel Sale Request</button>
    </h1>

    <p>
        <br />
        <label>Title: </label>
        <input type="text" class="form-control" name="txtBookTitle" @bind="@title" />
        <br />
        <label>Author: </label>
        <input type="text" class="form-control" name="txtBookAuthor" @bind="@author" />
        <br />
        <label>Edition:</label>
        <input type="text" class="form-control" name="txtBookEdition" @bind="@edition" />
        <br />
        <label>Price:</label>
        <input type="text" class="form-control" name="txtBookPrice" @bind="@price" />
        <br />
        <label>Module Code:</label>
        <input type="text" class="form-control" name="txtModuleCode" @bind="@modCode" />
        <br />
        <label>Institute:</label>
        <input type="text" class="form-control" name="txtBookInstitute" @bind="@institute" />
        <br />
        <label>Image:</label>
        <InputFile OnChange="HandelFileSelected"></InputFile>
        <button type="reset" class="btn btn-primary" @onclick="UploadImageDb">Upload Image</button>
        <br />
        <img id="imgTest" src="@sImageData" width="200" height="200"/>
    </p>

    @*##########################################################################################################
        Start of c# code
        ##########################################################################################################*@

    @code {

        List<Books> booksList;
        List<Books> OGlist;

        string title { get; set; }
        string author { get; set; }
        string edition { get; set; }
        string price { get; set; }
        string modCode { get; set; }
        string institute { get; set; }

        int id = 1;

        DateTime datePosted = DateTime.Today.Date;

        //Image variables
        public string sImageData = "data:image/jpeg;base64,";
        public byte[] bImageByte = null;

        IFileListEntry file;

        protected override async Task OnInitializedAsync()
        {
            OGlist = await _db.Get_Books();
            booksList = OGlist;

        }

        void AddNav()
        {
            booksAdd.AddInfo(id, title, author, Convert.ToInt32(edition), Convert.ToDouble(price), modCode, institute, datePosted, bImageByte); //Adding info to model
            navigationManager.NavigateTo("/BooksPages/Main/AddBooks/Locations");
        }

        void BackNav()
        {
            navigationManager.NavigateTo("BooksPages/Main");
        }

        //#######################################################################################################
        //Image methods
        //#######################################################################################################

        async Task HandelFileSelected(IFileListEntry[] files)
        {
            file = files.FirstOrDefault();
            if (file != null)
            {
                await fileUpload.UploadAsync(file);
            }
        }

        void UploadImageDb()
        {
            bImageByte = fileUpload.getImageBytes();

            string sImageBase64 = Convert.ToBase64String(bImageByte);

            sImageData = sImageData + sImageBase64;
            fileUpload.deleteLocal();
        }

    }
