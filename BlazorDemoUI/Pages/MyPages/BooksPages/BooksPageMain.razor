@page "/BooksPages/Main"

@using DataAccessLibrary.Bussiness_Logic.BooksLogic
@using DataAccessLibrary.Bussiness_Logic
@using DataAccessLibrary.Models
@using DataAccessLibrary
@using BlazorDemoUI.Models

@inject NavigationManager NavigationManager
@inject IBooksCreateService booksAdd
@inject IBookData _db
@*##########################################################################################################
    Code to display the button to add new books
    ##########################################################################################################*@

<h1>
    Available Book Sales
    <button type="submit" name="btnAddNew" class="btn btn-primary" style="float: right;" @onclick="AddNav">Add New Book</button>
</h1>

@*##########################################################################################################
        Code for the Search TextBox and Sorting CheckBox
    ##########################################################################################################*@

<h5>
    Filter Search:
    <input type="text" id="txtFilter" placeholder="Enter text to filter" @bind-value="@FilterVal" />
    <button type="submit" for="txtFilter" name="btnSearch" class="btn btn-primary" @onclick="@SearchBooks">Search Book</button>

    <p style="float: right;">
        <input type="checkbox" id="orderCheck" @bind="@boolValue" @onclick="@SetAsc" /> Check the box to sort the data according to price
        <br />
        Boolvalue: @boolValue
        <br />
    </p>
</h5>

@*You have checked: @(isChecked?"Yes":"No")*@
@*##########################################################################################################
        Code to display controls to filter according to price range
    ##########################################################################################################*@

<h5>Enter a Price range for your search</h5>
<h5>
    <input type="text" id="txtMinPrice" placeholder="Enter min price" @bind="@minPrice" />
    <input type="text" id="txtMaxPrice" placeholder="Enter max price" @bind="@maxPrice" />
    <button type="submit" name="btnPriceSearch" class="btn btn-primary" @onclick="@filterPrices">Search Prices</button>
</h5>


@*##########################################################################################################
        Code to display the table with the books +++++STARTS++++++
    ##########################################################################################################*@

@if (booksList is null)
{
    <p><en>Loading...</en></p>

}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <td>Book Title</td>
                <td>Book Edition</td>
                <td>Book Price</td>
                <td>Module Code</td>
                <td>Book Institute</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in booksList)
            {
                <tr>
                    <td><NavLink href=@string.Format("/BooksPages/Main/{0}",item.SalesNumber)>@item.BookTitle</NavLink></td>
                    <td>@item.BookEdition</td>
                    <td>@item.BookPrice</td>
                    <td>@item.ModuleCode</td>
                    <td>@item.BookInstitute</td>
                </tr>
            }
        </tbody>
    </table>
}

@*##########################################################################################################
        Code to display the table with the books +++++ENDS++++++
    ##########################################################################################################*@

@functions
{
    public bool boolValue { get; set; }
    void toggle()
    {
        if(boolValue)
        {
            boolValue = !boolValue;
        }
        else
        {
            boolValue = !boolValue;
        }
    }
}

@code {

    List<Books> booksList;
    List<Books> OGlist;

    private DisplayBookModel showBooks = new DisplayBookModel();

    //bool isChecked { get; set; } = false;

    string minPrice { get; set; }
    string maxPrice { get; set; }

    string FilterVal { get; set; } = "";
    string orderBy;

    protected override async Task OnInitializedAsync()
    {
        OGlist = await _db.Get_Books();
        booksList = OGlist;

    }


    //##########################################################################################################
    //Code to filter data according to price range
    //##########################################################################################################

    private async Task SearchBooks()
    {
        try
        {
            if (FilterVal == null || FilterVal.Length == 0)
            {

                booksList = await _db.Get_Books();
            }
            else
            {
                booksList = await _db.Search_MultiChar(FilterVal);
            }
        }
        catch (Exception ex)
        {
            string stest = ex.ToString();
        }
    }

    //##########################################################################################################
    //Code to search for specific books
    //##########################################################################################################

    private async Task filterPrices()
    {
        try
        {
            if ((minPrice.ToString() == null || minPrice.ToString().Length == 0) || (maxPrice.ToString() == null || maxPrice.ToString().Length == 0))
            {

                booksList = await _db.Get_Books();
            }
            else
            {
                booksList = await _db.SearchBooks_PriceRange(Convert.ToDecimal(minPrice), Convert.ToDecimal(maxPrice));
            }
        }
        catch (Exception ex)
        {
            string stest = ex.ToString();
        }
    }

    //##########################################################################################################
    //Code to set data to asc/desc
    //##########################################################################################################

    private async Task SetAsc()
    {
        try
        {
            toggle();
            if (boolValue == true)
            {
                booksList = await _db.OrderPrice("ASC");
                //isChecked = !isChecked;
            }
            else
            {
                toggle();
                booksList = await _db.Get_Books();
                //booksList = await _db.OrderPrice("DESC");
                //isChecked = !isChecked;
            }

        }
        catch (Exception ex)
        {
            string stest = ex.ToString();
        }
    }

    //##########################################################################################################
    //Code to navigate to the addBooksPage
    //##########################################################################################################

    void AddNav()
    {
        booksAdd.flush(); //Reset booksAdd list
        NavigationManager.NavigateTo("/BooksPages/Main/AddBooks");
    }

}
