@page "/TestEnviroment"

@using DataAccessLibrary.Bussiness_Logic
@using DataAccessLibrary.Models
@using DataAccessLibrary

@inject IBooksBussinessLogic BooksService


<h3>Books Main page</h3>


<hr />


@if (booksList is null)
{
    <p><en>Loading...</en></p>
}
else
{
    <hr />
    <p>Filter By @lastAtribute</p>

<table class="table-striped">
    <thead>
        <tr>
            <th>
                <button class="btn" @onclick="@(e=>sortAndFilter(BooksAtributes.BookTitle))">@BooksAtributes.BookTitle</button>
            </th>
            <th>
                <button class="btn" @onclick="@(e=>sortAndFilter(BooksAtributes.BookEdition))">@BooksAtributes.BookEdition</button>
            </th>
            <th>
                <button class="btn" @onclick="@(e=>sortAndFilter(BooksAtributes.BookPrice))">@BooksAtributes.BookPrice</button>
            </th>
            <th>
                <button class="btn" @onclick="@(e=>sortAndFilter(BooksAtributes.ModuleCode))">@BooksAtributes.ModuleCode</button>
            </th>
            <th>
                <button class="btn" @onclick="@(e=>sortAndFilter(BooksAtributes.BooksInstitute))">@BooksAtributes.BooksInstitute</button>
            </th>
            <th>
                <input type="checkbox" @onchange="EventArgs => { setAccending(EventArgs.Value); }" /> accending
            </th>
            <th>
                Filter Value <input type="search" @bind-value="FilterVal"/> @FilterVal  @*<InputText @bind-Value="FilterVal" @onchange="EventArgs => { sortAndFilter(lastAtribute); }"></InputText>*@
            </th>

        </tr>
    </thead>

    <tbody>
        @foreach (var item in booksList)
        {
        <tr>
            <th>
                <NavLink href=@string.Format("/BooksPages/Main/{0}",item.BookTitle)>@item.BookTitle</NavLink>
            </th>
            <th>
                @item.BookEdition
            </th>
            <th>
                @item.BookPrice
            </th>
            <th>
                @item.ModuleCode
            </th>
            <th>
                @item.BooksInstitute
            </th>

        </tr>
        }
    </tbody>
</table>
}

@code {

    List<Books> booksListOG;
    List<Books> booksList;

    BooksAtributes lastAtribute;

    bool accending;

    string FilterVal { get; set; }

    protected override void OnInitialized()
    {
        booksListOG = StaticTestData.BookTestData;
        booksList = booksListOG;
        lastAtribute = BooksAtributes.BookTitle;
    }

    protected void sortAndFilter(BooksAtributes _atribute)
    {
        lastAtribute = _atribute;
        if (FilterVal==null || FilterVal.Length == 0)
        {

            booksList = BooksService.SortBooks(booksListOG, _atribute, accending);
        }
        else
        {
            booksList = BooksService.FilterAndSort(booksListOG,_atribute,accending,FilterVal);
        }

    }

    void setAccending(object value)
    {
        accending = (bool)value;
        sortAndFilter(lastAtribute);
    }
}
